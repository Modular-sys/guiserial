import org.gradle.internal.os.OperatingSystem

plugins {
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.runtime' version '1.12.5'
}

jar.manifest.attributes('Main-Class': 'xyz.zenheart.guiserial.Launcher')

javafx {
    version = "17.0.1"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.base']
}

application {
    mainClass.set("xyz.zenheart.guiserial.Launcher")
    applicationName = 'guiserial'
}

dependencies {
    implementation project(':core')
    implementation 'com.fazecast:jSerialComm:2.7.0'
    implementation "com.zaxxer:HikariCP:${hikaricp_version}"
    implementation "org.xerial:sqlite-jdbc:${sqlite_version}"
    implementation "org.postgresql:postgresql:${pgsql_version}"
    implementation "mysql:mysql-connector-java:${mysql_version}"
    implementation "org.freemarker:freemarker:${freemarker_version}"
    implementation "org.mybatis:mybatis:${mybatis_version}"
    implementation "org.mybatis:mybatis-spring:${mybatis_spring_version}"
    implementation "org.slf4j:slf4j-simple:${slf4j_simple_version}"
    implementation "org.springframework:spring-test:${spring_version}"
    implementation "org.springframework:spring-jdbc:${spring_version}"
    implementation "org.springframework:spring-context:${spring_version}"
    implementation "org.springframework:spring-context-support:${spring_version}"
}

tasks.jar.enabled = true

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    modules = ['java.management', 'java.naming', 'java.instrument', 'java.sql', 'jdk.unsupported', 'jdk.security.jgss', 'java.scripting', 'java.desktop']

    launcher {
        noConsole = false
    }

    jpackage {

        OperatingSystem os = OperatingSystem.current()
        String imgType = os.windows ? 'ico' : os.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/runtime.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Acme Corporation']

        if (os.windows) {
            installerType = 'msi'
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        } else if (os.linux) {
            installerType = "rpm"
            installerOptions += ['--linux-package-name', 'guiserial', '--linux-shortcut']
        } else if (os.macOsX) {
            installerOptions += ['--mac-package-name', 'guiserial']
        }
    }
}